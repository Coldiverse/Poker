import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.Random;

public class MenuParticle extends GameObject{
	
	private Handler handler;
	private Random r;

	private Color col;
	
	public MenuParticle(float x, float y, ID id, Handler handler) {
		super(x, y, id);
		r = new Random();
		this.handler = handler;

		velX = 10;
		velY = 10;
		
		col = new Color(r.nextInt(255), r.nextInt(255), r.nextInt(255));
	}

	public Rectangle getBounds() {
		return new Rectangle((int) x, (int)y, 16, 16);
	}

	public void tick() {
		x += velX;
		y += velY;
		
		if(y <= 0 || y >= Game.HEIGHT - 40) velY *= -1;
		if(x <= 0 || x >= Game.WIDTH - 16) velX *= -1;
		/*if(x >= Game.WIDTH / 2 - (100 - 32) && x <= Game.WIDTH / 2 + 100 && y >= Game.HEIGHT - (600 + 32) && y <= Game.HEIGHT - 546) {
			velX *= -1;
			velY *= -1;
		}else if(x >= Game.WIDTH / 2 - (100 - 32) && x <= Game.WIDTH / 2 + 100 && y >= Game.HEIGHT - (500 + 32) && y <= Game.HEIGHT - 446) {
			velX *= -1;
			velY *= -1;
		}else if(x >= Game.WIDTH / 2 - (100 - 32) && x <= Game.WIDTH / 2 + 100 && y >= Game.HEIGHT - (400 + 32) && y <= Game.HEIGHT - 346) {
			velX *= -1;
			velY *= -1;
		}*/
		
		handler.addObject(new Trail((int)x, (int)y, ID.Trail, col, 16, 16, 0.05f, handler));
	}


	public void render(Graphics g) {
		g.setColor(col);
		g.fillRect((int)x, (int)y, 16, 16);
		
	}


}
